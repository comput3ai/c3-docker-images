# Stage 1: Initialize and download models
FROM ollama/ollama AS model-downloader

# Copy initialization script
COPY <<EOF /init-models.sh
#!/bin/sh
set -e

# Start ollama in the background
ollama serve &

# Wait for ollama to start
sleep 10

# Function to download and rename a model
download_model() {
    original_model=\$1
    final_name=\$2
    echo "Downloading \$final_name ..."
    ollama pull \$original_model > /dev/null 2>&1 && echo "Downloaded \$final_name successfully."
    ollama cp \$original_model \$final_name
    ollama rm \$original_model
}

# Start all downloads in parallel
download_model llama3.1:8b-instruct-q8_0 llama3:8b &
download_model hermes3:8b-llama3.1-q8_0 hermes3:8b &
download_model llama3.2:3b-instruct-q8_0 llama3:3b &
download_model hermes3:3b-llama3.2-q8_0 hermes3:3b &

# Wait for all background processes to complete
wait

# Shutdown ollama gracefully
pkill ollama
sleep 5
EOF

RUN chmod +x /init-models.sh

# Run the initialization script
RUN /init-models.sh

# Stage 2: Final image
FROM ollama/ollama

# Copy the model data from the downloader stage
COPY --from=model-downloader /root/.ollama /root/.ollama

# Expose the default Ollama port
EXPOSE 11434

# Set the host to allow external connections
ENV OLLAMA_HOST=0.0.0.0

# Add non-root user
RUN groupadd -r -g 65532 ollama && \
    useradd -r -m -u 65532 -g ollama ollama

USER 65532:65532

# Use the default entrypoint and command from the parent image